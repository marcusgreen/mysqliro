<?php
// This file is part of Moodle - http://moodle.org/
//
// Moodle is free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
//
// Moodle is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.

/**
 * Native mysqli read only class representing moodle database interface.
 *
 * @package    core_dml
 * @copyright  2018 Marcus Green
 * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later
 */
defined('MOODLE_INTERNAL') || die();

require_once(__DIR__ . '/moodle_database.php');
require_once(__DIR__ . '/mysqli_native_moodle_recordset.php');
require_once(__DIR__ . '/mysqli_native_moodle_temptables.php');
require_once(__DIR__ . '/mysqli_native_moodle_database.php');

class mysqliro_native_moodle_database extends mysqli_native_moodle_database {

    public function get_writable_tables() {

        $writabletables = array(
            'sessions',
            'logstore_standard_log',
            'user_last_access',
            'backup_controllers',
            'backup_logs',
            'userbackup_logs',
            'backup_ids_temp',
            'backup_courses',
            'files',
        );
        return $writabletables;
    }

    public function insert_record_raw($table, $params, $returnid = true, $bulk = false, $customsequence = false) {
        $writabletables = $this->get_writable_tables();
        // ...admins are OK.
        if (!in_array($table, $writabletables) && !is_siteadmin()) {
            return true;
        }
        return parent::insert_record_raw($table, $params, $returnid, $bulk,
                $customsequence); // TODO: Change the autogenerated stub.
    }

    public function update_record_raw($table, $params, $bulk = false) {
        $writabletables = $this->get_writable_tables();
        // ...admins are OK .
        if (!in_array($table, $writabletables) && !is_siteadmin()) {
            return true;
        }
        return parent::update_record_raw($table, $params,
                $bulk); // TODO: Change the autogenerated stub.
    }

    public function delete_records_select($table, $select, array $params = null) {
        $writabletables = $this->get_writable_tables();
        // ...admins are OK .
        if (!in_array($table, $writabletables) && !is_siteadmin()) {
            return true;
        }
        return parent::delete_records_select($table, $select, $params);
        // TODO: Change the autogenerated stub.
    }

}
